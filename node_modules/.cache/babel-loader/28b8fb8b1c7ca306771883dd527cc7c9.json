{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/pokemon/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Card from './components/Card';\nimport { getPokemon, getAllPokemon } from './services/pokemon';\nimport './App.css';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNextUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon';\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialURL);\n      setNextUrl(response.next);\n      setPrevUrl(response.previous);\n      await loadPokemon(response.results);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, []);\n\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextUrl);\n    await loadPokemon(data.results);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  };\n\n  const prev = async () => {\n    if (!prevUrl) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevUrl);\n    await loadPokemon(data.results);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  };\n\n  const loadPokemon = async data => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon);\n      return pokemonRecord;\n    }));\n\n    setPokemonData(_pokemonData);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://http://www.compuconsultations.org/pokeball.gif\",\n    alt: \"Loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 56\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, pokemonData.map((pokemon, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      pokemon: pokemon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: prev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Previous Page\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Next Page\")))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chris/Desktop/pokemon/src/App.js"],"names":["React","useState","useEffect","Navbar","Card","getPokemon","getAllPokemon","App","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","initialURL","fetchData","response","next","previous","loadPokemon","results","data","prev","_pokemonData","Promise","all","map","pokemon","pokemonRecord","textAlign","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Card from './components/Card';\nimport { getPokemon, getAllPokemon } from './services/pokemon';\nimport './App.css';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([])\n  const [nextUrl, setNextUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon'\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialURL)\n      setNextUrl(response.next);\n      setPrevUrl(response.previous);\n      await loadPokemon(response.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, [])\n\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextUrl);\n    await loadPokemon(data.results);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const prev = async () => {\n    if (!prevUrl) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevUrl);\n    await loadPokemon(data.results);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const loadPokemon = async (data) => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon)\n      return pokemonRecord\n    }))\n    setPokemonData(_pokemonData);\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div>\n        {loading ? <h1 style={{ textAlign: 'center' }}><img src={\"http://http://www.compuconsultations.org/pokeball.gif\"} alt={\"Loading\"} /></h1> : (\n          <>\n            \n            <div className=\"grid-container\">\n              {pokemonData.map((pokemon, i) => {\n                return <Card key={i} pokemon={pokemon} />\n              })}\n            </div>\n            <div className=\"btn\">\n              <button onClick={prev}>Previous Page</button>\n              <button onClick={next}>Next Page</button>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}